@page "/add-location"
@using MeteoApp.Services
@using MeteoApp.ViewModels
@using MeteoApp.Models
@using Microsoft.AspNetCore.Components.Forms

@inject HomePageViewModel ViewModel
@inject GeoCodingService GeoCodingService

<h3>Add New Location</h3>

<div>
    <label for="search">Search Location:</label>
    <InputText id="search" @bind="SearchQuery" />
    <button @onclick="SearchLocation">Search</button>
</div>

@if (SearchResult != null)
{
        <div>
            <h4>Search Result:</h4>
            <p><strong>Name:</strong> @SearchResult.Name</p>
            <p><strong>Latitude:</strong> @SearchResult.Latitude</p>
            <p><strong>Longitude:</strong> @SearchResult.Longitude</p>
            <button @onclick="SaveLocation">Add Location</button>
        </div>
}

<button @onclick="GoBack">Back to Locations</button>

@code {
    private string SearchQuery;
    private MeteoLocation SearchResult;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Console.WriteLine("Initializing AddLocation component...");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Errore in : {ex.Message}");
        }
    }

    private async Task SearchLocation()
    {
        if (!string.IsNullOrWhiteSpace(SearchQuery))
        {
               var result = await GeoCodingService.GetLocationByNameAsync(SearchQuery);
               if (result is MeteoLocation location)
               {
                   if (result != null) {
                       SearchResult = location;
                   }
                   else 
                   {
                    await Shell.Current.DisplayAlert("Error", "Invalid location data.", "OK");
                   }
               }
               else
               {
                   await Shell.Current.DisplayAlert("Error", "Invalid location data.", "OK");
               }
        }
    }

    private void SaveLocation()
    {
        if (SearchResult != null)
        {
            ViewModel.Locations.Add(SearchResult);
            SearchResult = null;
            SearchQuery = string.Empty;
        }
    }

    private void GoBack()
    {
        Shell.Current.GoToAsync("..");
    }
}
